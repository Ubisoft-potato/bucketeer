apiVersion: v1
kind: Pod
metadata:
  name: migration
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  initContainers:
  - name: check-batch-service
    image: curlimages/curl:8.1.2
    env:
      - name: WEB_GATEWAY_ADDRESS
        value: "{{ $.Values.migration.webGatewayAddress }}"
    command:
      - /bin/sh
    args:
      - -c
      - |
        ENDPOINT="${WEB_GATEWAY_ADDRESS}/bucketeer.batch.BatchService/CurrentMigrationVersion"
        TOKEN=`cat /usr/local/service-token/token`
        while true; do
          RES=`curl -X GET -m 3600 --cacert /usr/local/certs/service/tls.crt -H "authorization: bearer ${TOKEN}" -H "Content-Type: application/json" -s -o /dev/null -w '%{http_code}\\n' ${ENDPOINT}`
          echo "result: ${RES}"
          if [ "$RES" == 200 ]
          then
            break
          else
            sleep 5
          fi
        done
  containers:
    - name: migration
      image: curlimages/curl:8.1.2
      env:
        - name: WEB_GATEWAY_ADDRESS
          value: "{{ $.Values.migration.webGatewayAddress }}"
      command:
        - /bin/sh
      args:
        - -c
        - |
          ENDPOINT="${WEB_GATEWAY_ADDRESS}/bucketeer.batch.BatchService/Migrate"
          TOKEN=`cat /usr/local/service-token/token`
          RES=`curl -X POST -m 3600 --cacert /usr/local/certs/service/tls.crt -d '{"direction":"UP", "steps": 1}' -H "authorization: bearer ${TOKEN}" -H "Content-Type: application/json" -s -o /dev/null -w '%{http_code}\\n' ${ENDPOINT}`
          echo "result: ${RES}"
          if [ "$RES" == 200 ]
          then
            exit 0
          else
            exit 1
          fi